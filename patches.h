const byte Zone_Count = 4;

#define count_of(A) (sizeof(A)/sizeof(A[0]))
const byte patch_empty_zone[] = {-1};

// Generated by make patches.h:

// Patch built from [test_all1] test.patch
  const byte patch_test_test_all1_z0[] = {0,1,2,3,4,5,-1};
const byte* patch_test_test_all1[Zone_Count] = {patch_test_test_all1_z0, patch_empty_zone, patch_empty_zone, patch_empty_zone};

// Patch built from [test_even_odd] test.patch
  const byte patch_test_test_even_odd_z0[] = {0,2,4,-1};
  const byte patch_test_test_even_odd_z1[] = {1,3,5,-1};
const byte* patch_test_test_even_odd[Zone_Count] = {patch_test_test_even_odd_z0, patch_test_test_even_odd_z1, patch_empty_zone, patch_empty_zone};

const byte** patches[] = {patch_test_test_all1, patch_test_test_even_odd};
const byte Patch_Count = count_of(patches);

// End Generated by make patches.h

