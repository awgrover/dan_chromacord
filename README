The sliders are assigned to pins and rgb groups by sliders.h.

Libraries:
http://www.pjrc.com/teensy/arduino_libraries/MsTimer2.zip

Put these in libraries/RobTillaartRunningAverage:
https://github.com/RobTillaart/Arduino/blob/master/libraries/RunningAverage/RunningAverage.cpp
https://github.com/RobTillaart/Arduino/blob/master/libraries/RunningAverage/RunningAverage.h

To generate patches.h:

* Install Jupyter Notebook (formerly "iptyon notebook"), https://jupyter.org, for python 2.7
 * Windows
  * Install Python2 (was 2.7.9 when I looked, whatever is the newest 2.7.x)
    https://www.python.org/downloads/windows/
     Python 2.7.9 - 2014-12-10
         Download Windows x86 MSI installer
  * Install "pip"
   * it claims "pip" comes with python 2.7.9, 
    * Test for it:
    from a batch window, type:
        pip --help
    or
        pip /help
    It should be obvious               
    * if not get it from
        https://pip.pypa.io/en/latest/installing.html
  * Install jupyter notebook with pip (cf. http://ipython.org/install.html)
    from a batch window, type:
        pip install --upgrade pip
        pip install jupyter
    Lots of stuff should install.
    # as of 2018-08-05, jupyter is: ipython-5.8.0 jupyter-1.0.0
 * Linux
    as root
        apt-get install python2.7 python2.7-dev libzmq-dev python-pip
        pip install --upgrade pip
        pip install --upgrade pyzmq tornado jinja2 jsonschema jupyter
        chmod -R a+r /usr/local/lib/python2.7/dist-packages
    # as of 2018-08-05, jupyter is: ipython-5.8.0 jupyter-1.0.0

* Start the ipython-notebook server
    * windows, in a batch window, type:
        jupyter notebook
    * linux:
        open terminal
        type: jupyter notbook
        navigate to your .ipynb
        click it
    * It should open in your browser, if not, copy the url and open a new'ish browser:
        # something like: http://localhost:8888/?token=d9d61781cbec5f2991e36ef690b30380fb9a41980c5d9371
    * Click on 
        patchGenerate.ipynb
    * Follow directions

# Modes of operation

At start-up, goes into an attractor loop. Move slider 0 (3rd slider!) to enter performance mode.

## Chromacord mode

This is the normal performance mode with the chromacord box (dandelion aka tlc59116).
Patches as described above.

At the top of `dan_chromacord_p.ino`:

  #define PERFORMANCE 1

## Lightbox mode

This is for setting/testing a light-painting, "tlc59711" aka 16-bit mode.
This has exactly 4 zones mapped directly to the slider sets, so should be 1:1 slider to tlc pins.

At the top of `dan_chromacord_p.ino`:

  #define PERFORMANCE 0

This currently relies on a specific patch in patches.h (the last one!).

* set patch (rightmost selector) to 0
* sliders == tlc outputs
* prints the rgb values on the console (buad 115200)
* change the patch selector to anything else and the printout pauses
* using same sda/scl pins with straight-through phone cord, but that means data=21,clock=20 (opposite i2c).
* take 4 phone-cord lines to the "in" side of the tlc: black=gnd,red=vcc,<skip v+>,grn=ci,yel=di
** this assumes your v+ is hooked to something useful
